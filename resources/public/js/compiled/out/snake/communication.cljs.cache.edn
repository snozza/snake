;; Analyzed by ClojureScript 1.8.34
{:use-macros nil, :excludes #{}, :name snake.communication, :imports nil, :requires {snake.ainit snake.ainit, model snake.model, snake.model snake.model, config snake.config, snake.config snake.config, sente taoensso.sente, taoensso.sente taoensso.sente}, :uses nil, :defs {chsk-send! {:name snake.communication/chsk-send!, :file "/Users/andrew.snead/personal_projects/snake/src/snake/communication.cljs", :line 20, :column 1, :end-line 20, :end-column 20, :meta {:file "/Users/andrew.snead/personal_projects/snake/src/snake/communication.cljs", :line 20, :column 10, :end-line 20, :end-column 20}}, channel-socket {:name snake.communication/channel-socket, :file "/Users/andrew.snead/personal_projects/snake/src/snake/communication.cljs", :line 15, :column 1, :end-line 15, :end-column 24, :meta {:file "/Users/andrew.snead/personal_projects/snake/src/snake/communication.cljs", :line 15, :column 10, :end-line 15, :end-column 24}}, get-chsk-url {:protocol-inline nil, :meta {:file "/Users/andrew.snead/personal_projects/snake/src/snake/communication.cljs", :line 8, :column 7, :end-line 8, :end-column 19, :arglists (quote ([protocol chsk-host chsk-path type])), :doc "Connect to a configured server instead of the page host"}, :name snake.communication/get-chsk-url, :variadic false, :file "/Users/andrew.snead/personal_projects/snake/src/snake/communication.cljs", :end-column 19, :method-params ([protocol chsk-host chsk-path type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 4, :fn-var true, :arglists (quote ([protocol chsk-host chsk-path type])), :doc "Connect to a configured server instead of the page host"}, respawn {:protocol-inline nil, :meta {:file "/Users/andrew.snead/personal_projects/snake/src/snake/communication.cljs", :line 51, :column 7, :end-line 51, :end-column 14, :arglists (quote ([]))}, :name snake.communication/respawn, :variadic false, :file "/Users/andrew.snead/personal_projects/snake/src/snake/communication.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, event-msg-handler {:name snake.communication/event-msg-handler, :file "/Users/andrew.snead/personal_projects/snake/src/snake/communication.cljs", :line 26, :column 1, :end-line 26, :end-column 28, :meta {:file "/Users/andrew.snead/personal_projects/snake/src/snake/communication.cljs", :line 26, :column 11, :end-line 26, :end-column 28}}, dir {:protocol-inline nil, :meta {:file "/Users/andrew.snead/personal_projects/snake/src/snake/communication.cljs", :line 23, :column 7, :end-line 23, :end-column 10, :arglists (quote ([dx dy]))}, :name snake.communication/dir, :variadic false, :file "/Users/andrew.snead/personal_projects/snake/src/snake/communication.cljs", :end-column 10, :method-params ([dx dy]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 2, :fn-var true, :arglists (quote ([dx dy]))}, router {:name snake.communication/router, :file "/Users/andrew.snead/personal_projects/snake/src/snake/communication.cljs", :line 48, :column 1, :end-line 48, :end-column 16, :meta {:file "/Users/andrew.snead/personal_projects/snake/src/snake/communication.cljs", :line 48, :column 10, :end-line 48, :end-column 16}}, ch-chsk {:name snake.communication/ch-chsk, :file "/Users/andrew.snead/personal_projects/snake/src/snake/communication.cljs", :line 19, :column 1, :end-line 19, :end-column 17, :meta {:file "/Users/andrew.snead/personal_projects/snake/src/snake/communication.cljs", :line 19, :column 10, :end-line 19, :end-column 17}}, chsk-state {:name snake.communication/chsk-state, :file "/Users/andrew.snead/personal_projects/snake/src/snake/communication.cljs", :line 21, :column 1, :end-line 21, :end-column 20, :meta {:file "/Users/andrew.snead/personal_projects/snake/src/snake/communication.cljs", :line 21, :column 10, :end-line 21, :end-column 20}}, send-username {:protocol-inline nil, :meta {:file "/Users/andrew.snead/personal_projects/snake/src/snake/communication.cljs", :line 39, :column 7, :end-line 39, :end-column 20, :arglists (quote ([]))}, :name snake.communication/send-username, :variadic false, :file "/Users/andrew.snead/personal_projects/snake/src/snake/communication.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, chsk {:name snake.communication/chsk, :file "/Users/andrew.snead/personal_projects/snake/src/snake/communication.cljs", :line 18, :column 1, :end-line 18, :end-column 14, :meta {:file "/Users/andrew.snead/personal_projects/snake/src/snake/communication.cljs", :line 18, :column 10, :end-line 18, :end-column 14}}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:first-open? :chsk/recv :ch-recv :snake/respawn :snake/dir :default :snake/username :username :type :chsk/state :state :event :id :?data :chsk :send-fn :hierarchy :auto :chsk/handshake}, :order [:type :auto :chsk :ch-recv :send-fn :state :snake/dir :hierarchy :id :default :event :chsk/state :?data :first-open? :chsk/recv :snake/username :username :chsk/handshake :snake/respawn]}, :doc nil}