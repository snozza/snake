;; Analyzed by ClojureScript 1.8.34
{:use-macros nil, :excludes #{}, :name snake.model, :imports nil, :requires {reagent reagent.core, reagent.core reagent.core}, :uses nil, :defs {dictionary {:name snake.model/dictionary, :file "src/snake/model.cljs", :line 5, :column 1, :end-line 5, :end-column 16, :meta {:file "/Users/andrew.snead/personal_projects/snake/src/snake/model.cljs", :line 5, :column 6, :end-line 5, :end-column 16}}, app-state {:name snake.model/app-state, :file "src/snake/model.cljs", :line 12, :column 1, :end-line 12, :end-column 19, :meta {:file "/Users/andrew.snead/personal_projects/snake/src/snake/model.cljs", :line 12, :column 10, :end-line 12, :end-column 19}}, world! {:protocol-inline nil, :meta {:file "/Users/andrew.snead/personal_projects/snake/src/snake/model.cljs", :line 16, :column 7, :end-line 16, :end-column 13, :arglists (quote ([world]))}, :name snake.model/world!, :variadic false, :file "src/snake/model.cljs", :end-column 13, :method-params ([world]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([world]))}, uid! {:protocol-inline nil, :meta {:file "/Users/andrew.snead/personal_projects/snake/src/snake/model.cljs", :line 19, :column 7, :end-line 19, :end-column 11, :arglists (quote ([uid]))}, :name snake.model/uid!, :variadic false, :file "src/snake/model.cljs", :end-column 11, :method-params ([uid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([uid]))}, username! {:protocol-inline nil, :meta {:file "/Users/andrew.snead/personal_projects/snake/src/snake/model.cljs", :line 22, :column 7, :end-line 22, :end-column 16, :arglists (quote ([username]))}, :name snake.model/username!, :variadic false, :file "src/snake/model.cljs", :end-column 16, :method-params ([username]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([username]))}, alive? {:protocol-inline nil, :meta {:file "/Users/andrew.snead/personal_projects/snake/src/snake/model.cljs", :line 25, :column 7, :end-line 25, :end-column 13, :arglists (quote ([]))}, :name snake.model/alive?, :variadic false, :file "src/snake/model.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:uid :alive :username :world :players}, :order [:username :world :uid :alive :players]}, :doc nil}